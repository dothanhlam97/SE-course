 // Failed to get sources. Instead, stub sources have been generated by the disassembler.
 // Implementation of methods is unavailable.
package com.google.gson;
public final class Gson {
  
  static final boolean DEFAULT_JSON_NON_EXECUTABLE = false;
  
  static final boolean DEFAULT_LENIENT = false;
  
  static final boolean DEFAULT_PRETTY_PRINT = false;
  
  static final boolean DEFAULT_ESCAPE_HTML = true;
  
  static final boolean DEFAULT_SERIALIZE_NULLS = false;
  
  static final boolean DEFAULT_COMPLEX_MAP_KEYS = false;
  
  static final boolean DEFAULT_SPECIALIZE_FLOAT_VALUES = false;
  
  private static final com.google.gson.reflect.TypeToken<?> NULL_KEY_SURROGATE;
  
  private static final java.lang.String JSON_NON_EXECUTABLE_PREFIX = ")]}'\n";
  
  private final java.lang.ThreadLocal<java.util.Map<com.google.gson.reflect.TypeToken<?>,com.google.gson.Gson$FutureTypeAdapter<?>>> calls;
  
  private final java.util.Map<com.google.gson.reflect.TypeToken<?>,com.google.gson.TypeAdapter<?>> typeTokenCache;
  
  private final java.util.List<com.google.gson.TypeAdapterFactory> factories;
  
  private final com.google.gson.internal.ConstructorConstructor constructorConstructor;
  
  private final com.google.gson.internal.Excluder excluder;
  
  private final com.google.gson.FieldNamingStrategy fieldNamingStrategy;
  
  private final boolean serializeNulls;
  
  private final boolean htmlSafe;
  
  private final boolean generateNonExecutableJson;
  
  private final boolean prettyPrinting;
  
  private final boolean lenient;
  
  private final com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory;
  
  public Gson() {
  }
  
   Gson(com.google.gson.internal.Excluder excluder, com.google.gson.FieldNamingStrategy fieldNamingStrategy, java.util.Map<java.lang.reflect.Type,com.google.gson.InstanceCreator<?>> instanceCreators, boolean serializeNulls, boolean complexMapKeySerialization, boolean generateNonExecutableGson, boolean htmlSafe, boolean prettyPrinting, boolean lenient, boolean serializeSpecialFloatingPointValues, com.google.gson.LongSerializationPolicy longSerializationPolicy, java.util.List<com.google.gson.TypeAdapterFactory> typeAdapterFactories) {
  }
  
  public com.google.gson.internal.Excluder excluder() {
    return null;
  }
  
  public com.google.gson.FieldNamingStrategy fieldNamingStrategy() {
    return null;
  }
  
  public boolean serializeNulls() {
    return false;
  }
  
  public boolean htmlSafe() {
    return false;
  }
  
  private  com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {
    return null;
  }
  
  private  com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {
    return null;
  }
  
  static void checkValidFloatingPoint(double value) {
  }
  
  private static  com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {
    return null;
  }
  
  private static  com.google.gson.TypeAdapter<java.util.concurrent.atomic.AtomicLong> atomicLongAdapter(com.google.gson.TypeAdapter<java.lang.Number> longAdapter) {
    return null;
  }
  
  private static  com.google.gson.TypeAdapter<java.util.concurrent.atomic.AtomicLongArray> atomicLongArrayAdapter(com.google.gson.TypeAdapter<java.lang.Number> longAdapter) {
    return null;
  }
  
  public <T> com.google.gson.TypeAdapter<T> getAdapter(com.google.gson.reflect.TypeToken<T> type) {
    return null;
  }
  
  public <T> com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {
    return null;
  }
  
  public <T> com.google.gson.TypeAdapter<T> getAdapter(java.lang.Class<T> type) {
    return null;
  }
  
  public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {
    return null;
  }
  
  public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {
    return null;
  }
  
  public java.lang.String toJson(java.lang.Object src) {
    return null;
  }
  
  public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {
    return null;
  }
  
  public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {
  }
  
  public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {
  }
  
  public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {
  }
  
  public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {
    return null;
  }
  
  public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {
  }
  
  public com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {
    return null;
  }
  
  public com.google.gson.stream.JsonReader newJsonReader(java.io.Reader reader) {
    return null;
  }
  
  public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {
  }
  
  public <T> T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {
    return null;
  }
  
  public <T> T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {
    return null;
  }
  
  public <T> T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException, com.google.gson.JsonIOException {
    return null;
  }
  
  public <T> T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {
    return null;
  }
  
  private static void assertFullConsumption(java.lang.Object obj, com.google.gson.stream.JsonReader reader) {
  }
  
  public <T> T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {
    return null;
  }
  
  public <T> T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {
    return null;
  }
  
  public <T> T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {
    return null;
  }
  
  public java.lang.String toString() {
    return null;
  }
  
  static {} {
  }
}